/* eslint-disable @typescript-eslint/no-explicit-any */
"use client"

import { useEffect, useState } from "react"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { MapPin, Calendar, Users, Clock, ActivitySquare, Landmark, UtensilsCrossed } from "lucide-react"
import Link from "next/link"
import Banner from "@/components/banner"

interface FetchedPlaceData {
  id: number | string; // Assuming ID can be number or string from API
  name: string;
  category: string;
  image: string;
  description: string;
  duration: string;
  // Fields from new data structure, mapped from API
  location?: string;       // Mapped from API key "Location"
  attractionLink?: string; // Mapped from API key "Attraction Link"
  tags?: string;           // Mapped from API key "tags"
  // Fields that might be optional or not in all API responses
  bestTime?: string;       // Was in old interface, might not be in new API data
}

export default function HomePage() {
  const tripTypes = [
    { name: "‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á", icon: "üèîÔ∏è", description: "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏•‡∏∞‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥" },
    { name: "‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°", icon: "üõï", description: "‡∏ß‡∏±‡∏î ‡∏õ‡∏£‡∏∞‡πÄ‡∏û‡∏ì‡∏µ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô" },
    { name: "‡∏Å‡∏≤‡∏£‡∏ú‡πà‡∏≠‡∏ô‡∏Ñ‡∏•‡∏≤‡∏¢", icon: "üèñÔ∏è", description: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡∏≠‡∏±‡∏ô‡πÄ‡∏á‡∏µ‡∏¢‡∏ö‡∏™‡∏á‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û" },
  ]

  const [apiData, setApiData] = useState<FetchedPlaceData[] | null>(null)
  const [loading, setLoading] = useState<boolean>(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true)
        setError(null)
        const response = await fetch("https://script.google.com/macros/s/AKfycbwr0UkYTavLl-OzNNLOidpedZA4uf8Dm7CMPDg8yFMFK0STdI4TVQE8cy5of2-Ck5nDEA/exec")
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`)
        }
        const rawApiResponse = await response.json()
        // The API might return data directly as an array or nested under a 'data' key
        const rawDataArray = rawApiResponse.data || rawApiResponse;

        if (Array.isArray(rawDataArray)) {
          const transformedData: FetchedPlaceData[] = rawDataArray.map((item: any) => ({
            id: item.id,
            name: item.name,
            category: item.category,
            image: item.image,
            description: item.description,
            duration: item.duration,
            location: item.Location, // Map from API's "Location"
            attractionLink: item["Attraction Link"], // Map from API's "Attraction Link"
            tags: item.tags,
            bestTime: item.bestTime, // Will be undefined if not present in API item
          }));
          setApiData(transformedData);
          console.log("Fetched and transformed data:", transformedData);
        } else {
          console.error("Fetched data is not in the expected array format:", rawDataArray);
          setApiData([]); // Set to empty or handle error appropriately
          setError("Unexpected data format from API.");
        }
      } catch (e: any) {
        console.error("Failed to fetch data:", e)
        setError(e.message || "An unknown error occurred")
      } finally {
        setLoading(false)
      }
    }

    fetchData()
  }, []) // Empty dependency array ensures this runs once on mount

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <Banner />

      {/* Stats Section */}
      <section className="py-20 bg-slate-50">
        {/* You can display loading/error states or the fetched data here if needed */}
        {/* {loading && <p className="text-center">Loading data from API...</p>} */}
        {/* {error && <p className="text-center text-red-500">Error: {error}</p>} */}
        {/* {apiData && <div className="text-center">Data loaded! Check console.</div>} */}
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-gray-800 mb-4 font-poppins">‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï‡πÉ‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç</h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              ‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå‡∏Ç‡∏≠‡∏á‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ
            </p>
          </div>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
            {/* Stat Item 1: Destinations */}
            <div className="bg-white p-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 flex flex-col items-center text-center">
              <MapPin className="h-12 w-12 text-emerald-500 mb-4" />
              <div className="text-5xl font-bold text-emerald-600 mb-2">50+</div>
              <div className="text-gray-700 text-lg font-medium">‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á</div>
              <p className="text-sm text-gray-500 mt-1">‡∏ó‡∏µ‡πà‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏™‡∏≥‡∏£‡∏ß‡∏à</p>
            </div>
            {/* Stat Item 2: Activities */}
            <div className="bg-white p-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 flex flex-col items-center text-center">
              <ActivitySquare className="h-12 w-12 text-orange-500 mb-4" />
              <div className="text-5xl font-bold text-orange-600 mb-2">25+</div>
              <div className="text-gray-700 text-lg font-medium">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢</div>
              <p className="text-sm text-gray-500 mt-1">‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏∑‡πà‡∏ô‡πÄ‡∏ï‡πâ‡∏ô</p>
            </div>
            {/* Stat Item 3: Cultural Places */}
            <div className="bg-white p-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 flex flex-col items-center text-center">
              <Landmark className="h-12 w-12 text-emerald-500 mb-4" />
              <div className="text-5xl font-bold text-emerald-600 mb-2">15+</div>
              <div className="text-gray-700 text-lg font-medium">‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ß‡∏±‡∏í‡∏ô‡∏ò‡∏£‡∏£‡∏°</div>
              <p className="text-sm text-gray-500 mt-1">‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô</p>
            </div>
            {/* Stat Item 4: Food Experiences */}
            <div className="bg-white p-6 rounded-xl shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 flex flex-col items-center text-center">
              <UtensilsCrossed className="h-12 w-12 text-orange-500 mb-4" />
              <div className="text-5xl font-bold text-orange-600 mb-2">10+</div>
              <div className="text-gray-700 text-lg font-medium">‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏≠‡∏≤‡∏´‡∏≤‡∏£</div>
              <p className="text-sm text-gray-500 mt-1">‡∏•‡∏¥‡πâ‡∏°‡∏•‡∏≠‡∏á‡∏£‡∏™‡∏ä‡∏≤‡∏ï‡∏¥‡∏õ‡∏±‡∏Å‡∏©‡πå‡πÉ‡∏ï‡πâ</p>
            </div>
          </div>
        </div>
      </section>

      <section className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-gray-800 mb-4 font-poppins">‡∏ó‡∏≥‡πÑ‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï</h2>
            <p className="text-xl text-gray-600">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏≤‡∏á‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á</p>
          </div>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
            <Card className="text-center p-6 hover:shadow-lg transition-all duration-300 hover:-translate-y-2 bg-white/80 backdrop-blur-sm">
              <CardContent className="pt-6">
                <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-3xl text-white font-bold">üéØ</span>
                </div>
                <h3 className="text-xl font-bold text-gray-800 mb-3">‡∏°‡∏≤‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏µ‡πà‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï‡∏Å‡∏±‡∏ô‡∏ô</h3>
                <p className="text-gray-600 text-sm leading-relaxed">
                  ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÑ‡∏õ‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ó‡∏®‡∏Å‡∏≤‡∏• ‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏ó‡∏µ‡πà‡∏≠‡∏ö‡∏≠‡∏∏‡πà‡∏ô‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡πÅ‡∏Å‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏ó‡∏∞‡πÄ‡∏•
                </p>
              </CardContent>
            </Card>

            <Card className="text-center p-6 hover:shadow-lg transition-all duration-300 hover:-translate-y-2 bg-white/80 backdrop-blur-sm">
              <CardContent className="pt-6">
                <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-3xl text-white font-bold">üèÜ</span>
                </div>
                <h3 className="text-xl font-bold text-gray-800 mb-3">‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á?</h3>
                <p className="text-gray-600 text-sm leading-relaxed">
                  ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏£‡∏¥‡∏õ‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏Å‡∏•‡πÉ‡∏ô‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï‡πÉ‡∏ô‡∏ù‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏î‡πâ‡∏ß‡∏¢‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏ô‡πâ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°‡πÅ‡∏•‡∏∞‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏õ‡∏ä‡∏°
                </p>
              </CardContent>
            </Card>

            <Card className="text-center p-6 hover:shadow-lg transition-all duration-300 hover:-translate-y-2 bg-white/80 backdrop-blur-sm">
              <CardContent className="pt-6">
                <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-3xl text-white font-bold">üí°</span>
                </div>
                <h3 className="text-xl font-bold text-gray-800 mb-3">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï
                </h3>
                <p className="text-gray-600 text-sm leading-relaxed">
                  ‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡∏≠‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏™‡∏ô‡∏∏‡∏Å‡∏™‡∏ô‡∏≤‡∏ô‡πÉ‡∏ô‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï
                </p>
              </CardContent>
            </Card>

            <Card className="text-center p-6 hover:shadow-lg transition-all duration-300 hover:-translate-y-2 bg-white/80 backdrop-blur-sm">
              <CardContent className="pt-6">
                <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-3xl text-white font-bold">üåü</span>
                </div>
                <h3 className="text-xl font-bold text-gray-800 mb-3">‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏à‡∏î‡∏à‡∏≥</h3>
                <p className="text-gray-600 text-sm leading-relaxed">
                  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏î‡πá‡∏Å‡πÜ ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡πà‡∏≤? ‡∏™‡∏≥‡∏£‡∏ß‡∏à‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏Å‡πà‡∏≤
                  ‡∏ä‡∏≤‡∏¢‡∏´‡∏≤‡∏î ‡∏†‡∏π‡πÄ‡∏Ç‡∏≤ ‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÉ‡∏ô‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Featured Places */}
      <section className="py-20 bg-orange-200">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-gray-800 mb-4 font-poppins">‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à
            </h2>
            <p className="text-xl text-gray-600">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡πÉ‡∏ô‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï</p>
          </div>
          {loading && (
            <div className="text-center py-10">
              <p className="text-lg text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥...</p>
              {/* You could add a spinner component here */}
            </div>
          )}
          {error && (
            <div className="text-center py-10">
              <p className="text-lg text-red-500">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {error}</p>
            </div>
          )}
          {!loading && !error && apiData && apiData.length > 0 && (
            <div className="grid md:grid-cols-3 gap-8">
              {apiData.map((place) => (
                <Card
                  key={place.id}
                  className="overflow-hidden hover:shadow-xl transition-all duration-300 hover:-translate-y-2 group"
                >
                  <div className="relative">
                    <img src={place.image } alt="Image"className="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300"/>
                    <Badge className="absolute top-4 left-4 bg-orange-500">{place.category}</Badge>
                  </div>
                  <CardHeader>
                    <CardTitle className="text-xl">{place.name}</CardTitle>
                    <CardDescription>{place.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <div className="flex justify-between text-sm text-gray-600">
                        <div className="flex items-center">
                          <Clock className="h-4 w-4 mr-1" />
                          {place.duration}
                        </div>
                        <div className="flex items-center">
                          <Calendar className="h-4 w-4 mr-1" />
                          {place.bestTime}
                        </div>
                      </div>
                      <Link href={`/explore/${place.id}`}>
                        <Button className="w-full bg-orange-500 hover:bg-orange-600">‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</Button>
                      </Link>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          )}
          {!loading && !error && (!apiData || apiData.length === 0) && (
            <div className="text-center py-10">
              <p className="text-lg text-gray-600">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</p>
            </div>
          )}
        </div>
      </section>

      {/* Trip Types */}
      <section className="py-20 bg-slate-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-gray-800 mb-4 font-poppins">‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            </h2>
            <p className="text-xl text-gray-600">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì</p>
          </div>
          <div className="grid md:grid-cols-3 gap-8">
            {tripTypes.map((type, index) => (
              <Card
                key={index}
                className="text-center hover:shadow-lg transition-all duration-300 hover:scale-105 group"
              >
                <CardHeader>
                  <div className="text-6xl mb-4 group-hover:animate-bounce">{type.icon}</div>
                  <CardTitle className="text-2xl text-emerald-600">{type.name}</CardTitle>
                  <CardDescription className="text-lg">{type.description}</CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-b from-white via-orange-500 to-orange-500 text-white">
        <div className="container mx-auto px-4 text-center">
          <h2 className="text-4xl font-bold mb-6 font-poppins">‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á</h2>
          <p className="text-xl mb-8 max-w-2xl mx-auto">
            ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏õ‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Link href="/trip-planner">
              <Button size="lg" className="bg-white text-orange-600 hover:bg-gray-100">
                <Calendar className="mr-2 h-5 w-5" />
                ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á
              </Button>
            </Link>
            <Link href="/about">
              <Button
                size="lg"
                variant="outline"
                className="border-white text-orange-500 hover:text-orange-500 hover:bg-gray-100"
              >
                <Users className="mr-2 h-5 w-5" />
                ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á
              </Button>
            </Link>
          </div>
        </div>
      </section>
    </div>
  )
}
